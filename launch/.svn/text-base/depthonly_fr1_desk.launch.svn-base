<!-- 
Zheng Fang: 28 May. 2013

This launch file is for depth only odometry esitmation using icp method.

-->

<!-- /home/fang/fuerte_workspace/bagfiles/kinect_ship_test2.bag 

-->

<launch>
	<param name="use_sim_time" value="true" />
	
	<arg name="remotepath" default="/media/MyPassport/UbuntuROS/bagfiles"/>
	<arg name="localpath" default="/home/fang/fuerte_workspace/bagfiles"/>
	
	<node pkg="rosbag" type="play" name="rosbag" args="-r 0.5 -s 0
	    $(arg localpath)/freiburg/rgbd_dataset_freiburg1_room.bag  --clock ">
	</node>

	<!-- Converte Kinect DepthImage to Point Cloud 	-->
	<node pkg="ca_depth2cloud" type="ca_depth2cloud" name="ca_depth2cloud">
		<remap from="/camera/depth_registered/camera_info" to="/camera/depth/camera_info"/>
		<remap from="/camera/depth_registered/image" to="/camera/depth/image"/>
		<remap from="/camera/rgb/image_rect" to="/camera/rgb/image_color"/>	
		<remap from="/camera/depth/points" to="/camera/depth/points2"/>
	</node>  

	<!-- Random Sampling Filter : /random_sample_filter/cloud-->
	<node pkg="pcl17_filtering" type="random_sampling_filter" name="random_sampling_filter" output="screen" 
		args="input:=/camera/depth/points2" >
		<param name="sampleNum" value="4500" />
		<param name="strFrameID" value="camera_rgb_optical_frame"/>		
	</node>
	
	<!-- Calculate the Odometry using ICP -->
	<node pkg="depthOdometry" type="fastICP" name="depthOdometry" output="screen"  
		args="input_cloud:=/random_sample_filter/cloud">
		<param name="odomFrame"           type="string"   value="/camera_rgb_optical_frame" />
		<param name="mapFrame"            type="string"   value="/asus_init" />
		
		<!-- Frame to Frame or Local Map-->
		<param name="useMap"               type="bool"     value="true"/>
		<param name="createGlobalMap"      type="bool"     value="false"/>
		<param name="localMapNum"      	   type="int"      value="8000"/>
		
		<!-- Normal Space Sampling Parameters-->
		<param name="useNormalSampling"    type="bool"     value="false"/>
		<param name="selectedPtNum"        type="int"      value="2500"/>
		
		<!-- ICP Parameters-->
		<param name="setMaxCorresDist"            type="double"   value="0.05"/>
		
		<!-- Correspondence Rejector Parameters-->
		<param name="rej_max_corresdist"          type="double"   value="0.05"/>
		
		<param name="setMaxIterationNum"          type="int"      value="30"/>
		<param name="setTransEpsilon"             type="double"   value="1e-8"/>
		<param name="euclidean_fitness_epsilon"   type="double"   value="0.001"/>
		
		<param name="mapVoxelLeafSize"            type="double"   value="0.05"/>
		
	</node>	


	<!-- Show DO Path -->
	<node pkg="hector_trajectory_server" type="hector_trajectory_server" name="hector_trajectory_server1" output="screen">
			<param name="target_frame_name" type="string" value="/asus_init" />
			<param name="source_frame_name" type="string" value="/camera_rgb_optical_frame" />
			<param name="trajectory_update_rate" type="double" value="10" />
			<param name="trajectory_publish_rate" type="double" value="10" />
			<remap from="trajectory" to="/DOTrajectory"/>
	</node>
	
	
	<!-- Launch visualizaiton -->
	<node pkg="rviz" type="rviz" name="rviz" args="-d $(find depthOdometry)/launch/freiburg.vcg"/>
	
	
</launch>
